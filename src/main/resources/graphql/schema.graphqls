enum MessageStatus{
    UNSENT
    SENT
    DELIVERED
    READ
}


type Message {
    id: String!
    topic: String!
    content: String!
    sender: String!
    receiver: String!
    status: MessageStatus!
    sentAt: String!
    deliveredAt: String!
    readAt: String!
}

type MessageStatusUpdates {
    id: String!
    receiver: String!
    status: MessageStatus!
    deliveredAt: String!
    readAt: String!
}

type Query {
    syncMessages(topic: String): [Message!]!
}

type Mutation {
    sendMessage(id: String!, topic: String!, content: String!, sender: String!, sentAt: String!): Message!
    statusUpdate(messageId: String!, topic: String!, status: MessageStatus!, deliveredAt: String!, readAt: String!): MessageStatusUpdates!
}

type Subscription {
    messageAdded(topic:String!): Message!
    messageUpdates(topic:String!): MessageStatusUpdates!
}